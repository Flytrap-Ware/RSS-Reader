name: Gradle Package

on:
  push:
    branches: ["rel/test-1"]

env:
  working-directory: .
  AWS_REGION: ap-northeast-2                   
  EC2_REPOSITORY: 15.165.223.16:5000
  AWS_SG_NAME: FlytrapDevelopment
  AWS_SG_ID: sg-0895e77b2da12a6c9

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.2

    - uses: actions/checkout@v3

    - name: JDK 17 설정
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github 
        settings-path: ${{ github.workspace }} 
        submodules: true 

    - name: Docker Buildx 설정
      uses: docker/setup-buildx-action@v1

    - name: Gradle로 빌드
      run: |
        chmod +x gradlew
        ./gradlew clean build -x test

    - name: AWS 자격 증명 설정
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
         aws-region: ${{env.AWS_REGION}}

    - name: 보안 그룹에 Github Actions IP 추가
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 5000 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: 이미지 빌드, 태그 설정, Amazon EC2에 푸시
      id: build-image
      run: |
        docker build --platform amd64 --build-arg DEPENDENCY=build/dependency -f ./Dockerfile -t ${{env.EC2_REGISTRY}}/app .
        docker push ${{ env.EC2_REGISTRY }}/app

    - name: 원격 SSH 명령 실행
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ubuntu
        key: ${{ secrets.AWS_KEY }}
        script: |
          ./run.sh

    - name: 보안 그룹에서 Github Actions IP 제거
      run: |
         aws ec2 revoke-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
